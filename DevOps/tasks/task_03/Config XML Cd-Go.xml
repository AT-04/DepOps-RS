<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="90">
  <server artifactsdir="artifacts" agentAutoRegisterKey="65f7a417-7f1b-46fd-af37-3bacb27fcfc0" commandRepositoryLocation="default" serverId="0f90d256-d58c-49ab-8f02-6f7875e9f467" />
  <pipelines group="defaultGroup">
    <pipeline name="ixplora-api-ci" isLocked="false">
      <environmentvariables>
        <variable name="PORT_TO_SERVE">
          <value>3001</value>
        </variable>
        <variable name="ENVIRONMENT">
          <value>testing</value>
        </variable>
        <variable name="CORS">
          <value>true</value>
        </variable>
        <variable name="LOG_LEVEL">
          <value>error</value>
        </variable>
        <variable name="LOGS">
          <value>logs.log</value>
        </variable>
        <variable name="STG_MONGO_USER">
          <value>ixplora</value>
        </variable>
        <variable name="STG_MONGO_PASSWORD">
          <value>secretixplora</value>
        </variable>
        <variable name="STG_DB_HOST_IP">
          <value>localhost</value>
        </variable>
        <variable name="STG_MONGO_PORT">
          <value>27017</value>
        </variable>
        <variable name="STG_MONGO_DB_NAME">
          <value>ixplora</value>
        </variable>
        <variable name="STG_CASSANDRA_USER">
          <value>ixplora</value>
        </variable>
        <variable name="STG_CASSANDRA_PASSWORD">
          <value>secretixplora</value>
        </variable>
        <variable name="STG_CASSANDRA_IP">
          <value>localhost</value>
        </variable>
        <variable name="STG_CASSANDRA_PORT">
          <value>9042</value>
        </variable>
        <variable name="STG_CASSANDRA_KEYSPACE">
          <value>ixplora</value>
        </variable>
        <variable name="STG_SMTP_SERVER">
          <value>smtp.gmail.com</value>
        </variable>
        <variable name="STG_EMAIL">
          <value>ixploracbba@gmail.com</value>
        </variable>
        <variable name="STG_EMAIL_PASSWORD">
          <value>ixplora@gmail.com</value>
        </variable>
        <variable name="STG_CQRS_HOST">
          <value>localhost</value>
        </variable>
        <variable name="CQRS_ENABLE">
          <value>true</value>
        </variable>
        <variable name="CQRS_NUMBER_WORKERS">
          <value>1</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@10.28.128.22:richard.severich/be-service-surveys.git" branch="feature/continuous-integration" />
      </materials>
      <stage name="Build" artifactCleanupProhibited="true" cleanWorkingDir="true">
        <jobs>
          <job name="install-dependencies">
            <tasks>
              <task>
                <pluginConfiguration id="script-executor" version="1" />
                <configuration>
                  <property>
                    <key>script</key>
                    <value>npm install&#xD;
npm run build-ubuntu</value>
                  </property>
                  <property>
                    <key>shtype</key>
                    <value>bash</value>
                  </property>
                </configuration>
                <runif status="passed" />
              </task>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="Test">
        <jobs>
          <job name="create-env-file">
            <tasks>
              <exec command="cp">
                <arg>.env.example</arg>
                <arg>.env</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
          <job name="set-env-variables">
            <tasks>
              <task>
                <pluginConfiguration id="script-executor" version="1" />
                <configuration>
                  <property>
                    <key>script</key>
                    <value>sed -i "s/{PORT}/$PORT_TO_SERVE/g" .env&#xD;
sed -i "s/{ENVIRONMENT}/$ENVIRONMENT/g" .env&#xD;
sed -i "s/{CORS}/$CORS/g" .env&#xD;
sed -i "s/{LOG_LEVEL}/$LOG_LEVEL/g" .env&#xD;
sed -i "s/{LOGS}/$LOGS" .env&#xD;
NODE_ENV=test</value>
                  </property>
                  <property>
                    <key>shtype</key>
                    <value>bash</value>
                  </property>
                </configuration>
                <runif status="passed" />
              </task>
            </tasks>
          </job>
          <job name="run-test">
            <tasks>
              <exec command="npm">
                <arg>test</arg>
                <runif status="failed" />
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="reports" path="reports/" />
            </tabs>
            <artifacts>
              <artifact src="report.html" dest="reports/" />
            </artifacts>
          </job>
          <job name="coverage">
            <tasks>
              <exec command="npm">
                <arg>run</arg>
                <arg>coverage</arg>
                <runif status="failed" />
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="report-coverag" path="reports/coverage/index.html" />
            </tabs>
            <artifacts>
              <artifact src="coverage/*" dest="reports/coverage" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Package">
        <jobs>
          <job name="set-env-variables">
            <tasks>
              <task>
                <pluginConfiguration id="script-executor" version="1" />
                <configuration>
                  <property>
                    <key>script</key>
                    <value>sed -i "s/{PORT}/$PORT_TO_SERVE/g" .env&#xD;
sed -i "s/{ENVIRONMENT}/$ENVIRONMENT/g" .env&#xD;
sed -i "s/{CORS}/$CORS/g" .env&#xD;
sed -i "s/{LOG_LEVEL}/$LOG_LEVEL/g" .env&#xD;
sed -i "s/{LOGS}/$LOGS" .env&#xD;
sed -i "s/{MONGO_USERNAME}/$STG_MONGO_USER/g" .env&#xD;
sed -i "s/{MONGO_PASSWORD}/$STG_MONGO_PASSWORD/g" .env&#xD;
sed -i "s/{MONGO_IP}/$STG_DB_HOST_IP/g" .env&#xD;
sed -i "s/{MONGO_PORT}/$STG_MONGO_PORT/g" .env&#xD;
sed -i "s/{MONGO_DB_NAME}/$STG_MONGO_DB_NAME/g" .env&#xD;
sed -i "s/{CASSANDRA_USERNAME}/$STG_CASSANDRA_USER/g" .env&#xD;
sed -i "s/{CASSANDRA_PASSWORD}/$STG_CASSANDRA_PASSWORD/g" .env&#xD;
sed -i "s/{CASSANDRA_IP}/$STG_CASSANDRA_IP/g" .env&#xD;
sed -i "s/{CASSANDRA_PORT}/$STG_CASSANDRA_PORT/g" .env&#xD;
sed -i "s/{CASSANDRA_KEYSPACE}/$STG_CASSANDRA_KEYSPACE/g" .env&#xD;
sed -i "s/{SMTP_SERVER}/$STG_SMTP_SERVER/g" .env&#xD;
sed -i "s/{EMAIL}/$STG_EMAIL/g" .env&#xD;
sed -i "s/{EMAIL_PASSWORD}/$STG_EMAIL_PASSWORD/g" .env&#xD;
sed -i "s/{MOBILE_APP_URL}/$STG_MOBILE_APP_URL/g" .env&#xD;
sed -i "s/{CQRS_HOST}/$STG_CQRS_HOST/g" .env&#xD;
sed -i "s/{CQRS_ENABLE}/$CQRS_ENABLE/g" .env&#xD;
sed -i "s/{CQRS_NUMBER_WORKERS}/$CQRS_NUMBER_WORKERS/g" .env</value>
                  </property>
                  <property>
                    <key>shtype</key>
                    <value>bash</value>
                  </property>
                </configuration>
                <runif status="passed" />
              </task>
            </tasks>
          </job>
          <job name="copy-env-files">
            <tasks>
              <task>
                <pluginConfiguration id="script-executor" version="1" />
                <configuration>
                  <property>
                    <key>script</key>
                    <value>cp package.json build/&#xD;
cp README.md build/&#xD;
cp .service.info build/&#xD;
export VERSION=$(cat package.json | jq -r .version)&#xD;
sed -i "s/{BuildVersion}/$VERSION/g" build/.service.info&#xD;
cp .env build/</value>
                  </property>
                  <property>
                    <key>shtype</key>
                    <value>bash</value>
                  </property>
                </configuration>
                <runif status="passed" />
              </task>
            </tasks>
          </job>
          <job name="compress">
            <tasks>
              <task>
                <pluginConfiguration id="script-executor" version="1" />
                <configuration>
                  <property>
                    <key>script</key>
                    <value>tar -czf ixplora.tar.gz build/</value>
                  </property>
                  <property>
                    <key>shtype</key>
                    <value>bash</value>
                  </property>
                </configuration>
                <runif status="passed" />
              </task>
            </tasks>
            <artifacts>
              <artifact src="ixplora.tar.gz" dest="distribution/" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <agents>
    <agent hostname="ec303ac4797e" ipaddress="172.18.0.2" uuid="09d08090-066c-4a1c-a943-c9ad559efc7f" />
  </agents>
</cruise>
